 

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: abc123
      POSTGRES_DB: flask_notes
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  flask_notes_app:
    build:
      context: ../flask_notes_app  # Corrected structure
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:5000 --workers 3 --timeout 60 --log-level debug run:app 
    ports:
      - "5000:5000"
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:abc123@db:5432/flask_notes
      REDIS_URL: redis://redis:6379/0
      FLASK_DEBUG: 'False'
      SECRET_KEY: 'your-secret-key-here'
    networks:
      - app-network
    volumes:
      - ../flask_notes_app:/app 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      flask_notes_app:
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/ssl/certs:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
